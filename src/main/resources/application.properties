server.port=8080
spring.application.name=jmcloud


#用户登陆生成JWT TOKEN时对称算法使用的密钥
portal.user.login.jwt.secret=abcd
#用户登陆之后的JWT TOKEN过期时间
portal.user.login.jwt.tokenExp=60
#用户登陆参数密码非对称加解密公钥
portal.user.login.password.rsa.publickey=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCYArkD9tIloU0SQfqrpDYUfugrR+x1UrXtRiI8WKILYzlB4uVJq5rDzmAusVtvuXGCUMN5PqLabyDBwDTu5UNee+7MTVj9RwVcMUQz7/05l2dtRewqloPTxKDgMInNkm6WNngLTpe7lWH9Fcu0wlhzswSyZFX1GVSskEcQlhXpBwIDAQAB
#用户登陆参数密码非对称加解密私钥
portal.user.login.password.rsa.privatekey=MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAJgCuQP20iWhTRJB+qukNhR+6CtH7HVSte1GIjxYogtjOUHi5UmrmsPOYC6xW2+5cYJQw3k+otpvIMHANO7lQ1577sxNWP1HBVwxRDPv/TmXZ21F7CqWg9PEoOAwic2SbpY2eAtOl7uVYf0Vy7TCWHOzBLJkVfUZVKyQRxCWFekHAgMBAAECgYAYiG/1vNMDsbmvlahwJSt5OVYdDhmSgcvMxIHn/WIBtnzaLlVVA3YR3e/V+VfJe0NfhctWeQ5tdHvz6SJh3+x0Rp0rTGWn+LCaOgvRP/2K8iFnFnJ9TOSatK49ddsbyejFW5VIxIAnZfJhjE583WBmhmN1dyoWBwK6l9ASYw/BuQJBAMY5zoN9qKM0nEFRlIZi0bYINaWkOoaDX3W05YpfK4AeULe74Lj+rSYyv3mdmCCnSOH3E9FN+PU2WiRbfQ1Jb5MCQQDEUKuOPqcXvHHwI+sBK5Rl/5u8ONdE1xmvAsZ9AcMVqg9Rs3gENae8kX6m/4pM/2tfUk/4eo85Igjg2vGV9kE9AkEAjy4uFxhq+QgFXcD5kWBLrjqb1XucspCuIS17J8m6eB5tm2lf1wBOPWsml0fYHK34nQ+FBwhVLXoG/n//AdvrdQJAA/40DxedJHFzy9OfMw3k3dI+I6zwS/koD5Q5308K3cTwvNOurD8/Iym+br0h3gEP+QdekwpDIYFctt4dLdStbQJAB38oJ54AdUhCBt2I5NKIIb1MOOG2QQaHzJ1ykWH9tvLE0FLDWPJHStXbPUkPW8X68Ixhifl4JlRi5DAWYslLWg==
#是否进行登陆检查
portal.user.login.check=false
#某用户名下密码输入五次错误则不允许登陆
portal.user.login.errorCount=5


#自定义线程池核心线程数
spring.async.threadpool.corePoolSize=10
#自定义线程池最大线程数
spring.async.threadpool.maxPoolSize=30
#自定义线程池队列最大线程数
spring.async.threadpool.queueCapacity=2000



#出现错误时，直接抛出异常（全局异常处理）
spring.mvc.throw-exception-if-no-handler-found=true
#不要为我们工程中的资源文件建立映射（全局异常处理）
spring.resources.add-mappings=false



#MyBatisPlus配置
#配置通用枚举所在包
mybatis-plus.type-enums-package=com.kzdata.jmcloud.portal.enums
#为实体类使用首字母小写生成别名
#mybatis.type-aliases-package=net.mima.mixiu.common.model
#配置实体类属性与数据库表字段为驼峰命名法映射
mybatis.configuration.map-underscore-to-camel-case=true


spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.url=jdbc:mysql://localhost:3306/jmcloud?characterEncoding=utf-8
spring.datasource.druid.username=root
spring.datasource.druid.password=root



# 通用连接池配置
# 初始化时建立物理连接的个数，缺省：0
spring.datasource.druid.initial-size=5
# 最大连接池数量，缺省：8
spring.datasource.druid..max-active=20
# 最小连接池数量
spring.datasource.druid.min-idle=5
# 配置获取连接时最大等待时间，单位毫秒。配置此项之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
spring.datasource.druid.max-wait=6000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=300000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=60000
#spring.datasource.dynamic.druid.max-evictable-idle-time-millis=
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。缺省：true
spring.datasource.druid.test-on-borrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.test-on-return=false
# 用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
# 缺省:-1
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=-1
# 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
# 监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,log4j



